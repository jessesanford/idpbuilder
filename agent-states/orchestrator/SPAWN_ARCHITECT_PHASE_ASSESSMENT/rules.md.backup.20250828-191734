# Orchestrator - SPAWN_ARCHITECT_PHASE_ASSESSMENT State Rules

## üö® SPAWN_ARCHITECT_PHASE_ASSESSMENT IS A VERB - SPAWN IMMEDIATELY! üö®

### IMMEDIATE ACTIONS UPON ENTERING SPAWN_ARCHITECT_PHASE_ASSESSMENT

**THE MOMENT YOU ENTER THIS STATE, YOU MUST:**
1. Spawn Architect for PHASE-LEVEL assessment NOW
2. Provide all wave integration branches for the phase
3. Include phase completion metrics
4. Request comprehensive phase validation

**FORBIDDEN - AUTOMATIC FAILURE:**
- ‚ùå "STATE TRANSITION COMPLETE: Now in SPAWN_ARCHITECT_PHASE_ASSESSMENT" [stops]
- ‚ùå "Successfully entered SPAWN_ARCHITECT_PHASE_ASSESSMENT state" [waits]
- ‚ùå "Ready to spawn architect" [pauses]
- ‚ùå "I'm in SPAWN_ARCHITECT_PHASE_ASSESSMENT state" [does nothing]

**REQUIRED - IMMEDIATE ACTION:**
- ‚úÖ "Entering SPAWN_ARCHITECT_PHASE_ASSESSMENT, spawning architect NOW..."
- ‚úÖ "SPAWN ARCHITECT for complete Phase $PHASE assessment..."
- ‚úÖ "Providing all wave integrations for phase validation..."

## State Context

This state is entered in two scenarios:
1. **Initial Assessment**: After the last wave of a phase completes successfully
2. **Reassessment**: After PHASE_INTEGRATION creates integration branch with fixes (R259)

The architect must assess the ENTIRE PHASE before allowing transition to SUCCESS.

## üî¥üî¥üî¥ CRITICAL: Phase Completion Gate üî¥üî¥üî¥

**This state is the MANDATORY gateway to phase completion:**
- NO phase can be marked complete without architect assessment
- NO transition to SUCCESS without passing this gate
- NO shortcuts or bypassing allowed

## Primary Purpose

The SPAWN_ARCHITECT_PHASE_ASSESSMENT state is for:
1. Spawning architect to assess complete phase work
2. Providing all phase deliverables for review
3. Ensuring phase-level architectural integrity
4. Validating readiness for phase completion

## Phase Assessment Scope

The architect must review:
- **All Wave Integrations**: Every wave branch merged correctly
- **Phase Architecture**: Overall design coherence
- **Feature Completeness**: All planned features implemented
- **API Stability**: APIs ready for external use
- **Test Coverage**: Phase-level test adequacy
- **Documentation**: Phase documentation complete
- **Performance**: Phase-level performance validation
- **Security**: Security requirements met

## Spawning the Architect

```bash
# Determine if this is reassessment or initial
IS_REASSESSMENT=$(yq '.phase_integration_branches[] | select(.phase == env(PHASE)).ready_for_reassessment' orchestrator-state.yaml)

if [ "$IS_REASSESSMENT" = "true" ]; then
    ASSESSMENT_TYPE="REASSESSMENT after fixes"
    # Use post-fixes integration branch
    PHASE_BRANCH=$(yq '.phase_integration_branches[] | select(.phase == env(PHASE)).branch' orchestrator-state.yaml)
    ORIGINAL_REPORT="phase-assessments/phase${PHASE}/PHASE-${PHASE}-ASSESSMENT-REPORT.md"
else
    ASSESSMENT_TYPE="INITIAL ASSESSMENT"
    PHASE_BRANCH=$(get_phase_integration_branch_name "$PHASE")
    ORIGINAL_REPORT=""
fi

# Prepare phase assessment request
PHASE_CONTEXT="Complete Phase $PHASE ${ASSESSMENT_TYPE}"

# Gather all wave branches
WAVE_BRANCHES=$(list_all_wave_integration_branches "$PHASE")

# Key information for architect
ASSESSMENT_PROMPT="Perform COMPLETE PHASE $PHASE ${ASSESSMENT_TYPE}.

üö®üö®üö® MANDATORY REQUIREMENT [R257]: You MUST create a phase assessment report file! üö®üö®üö®

1. CREATE REPORT FILE: phase-assessments/phase${PHASE}/PHASE-${PHASE}-ASSESSMENT-REPORT.md
2. Include ALL mandatory sections per R257
3. Document your DECISION in the report
4. Commit and push the report
5. ONLY THEN signal assessment complete

$([ -n "$ORIGINAL_REPORT" ] && echo "
üìã THIS IS A REASSESSMENT:
- Original report with issues: $ORIGINAL_REPORT  
- Fixes have been integrated in: $PHASE_BRANCH
- Verify all Priority 1 issues are addressed
- Check if original concerns are resolved
")

Integration Branches:
$WAVE_BRANCHES

Phase Branch: $PHASE_BRANCH

Assess:
1. Feature completeness against phase plan
2. Architectural integrity across all waves
3. API readiness and stability
4. Test coverage adequacy at phase level
5. Documentation completeness
6. Performance and security validation
7. Readiness for production use

Provide decision IN YOUR REPORT FILE: 
- PHASE_COMPLETE (ready for SUCCESS)
- NEEDS_WORK (specific fixes required)
- PHASE_FAILED (major issues, cannot complete)

This assessment gates phase completion - be thorough.
Your assessment is INVALID without the report file per R257."

# Spawn architect reviewer
Task: subagent_type="architect-reviewer" \
      prompt="$ASSESSMENT_PROMPT" \
      description="Complete Phase $PHASE Assessment (Gates SUCCESS)"
```

## State File Updates

```bash
# Record phase assessment request
yq -i ".phase_assessment.phase = $PHASE" orchestrator-state.yaml
yq -i ".phase_assessment.requested_at = \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"" orchestrator-state.yaml
yq -i ".phase_assessment.expected_report = \"phase-assessments/phase${PHASE}/PHASE-${PHASE}-ASSESSMENT-REPORT.md\"" orchestrator-state.yaml
yq -i ".phase_assessment.type = \"COMPLETE_PHASE\"" orchestrator-state.yaml
yq -i ".phase_assessment.phase_branch = \"$PHASE_BRANCH\"" orchestrator-state.yaml
yq -i ".phase_assessment.wave_count = $WAVE_COUNT" orchestrator-state.yaml
yq -i ".phase_assessment.status = \"PENDING\"" orchestrator-state.yaml

# Immediate transition to waiting
transition_to "WAITING_FOR_PHASE_ASSESSMENT"
```

## Success Criteria for Phase Assessment

The phase assessment passes when:
- [ ] All phase features implemented
- [ ] Architectural consistency verified
- [ ] APIs stable and documented
- [ ] Test coverage meets requirements
- [ ] Performance benchmarks met
- [ ] Security requirements satisfied
- [ ] Documentation complete
- [ ] No blocking issues remain

## State Transitions

From SPAWN_ARCHITECT_PHASE_ASSESSMENT:
- **Always** ‚Üí WAITING_FOR_PHASE_ASSESSMENT (immediate after spawn)

## Multi-Phase Considerations

If this is NOT the final phase:
- Architect may recommend starting next phase planning
- PHASE_COMPLETE state will handle transition to next phase
- Document lessons learned for next phase

## Required Actions

1. Update state file with assessment request
2. Spawn architect with comprehensive context
3. Provide all integration branches
4. Include phase metrics and achievements
5. Transition to WAITING_FOR_PHASE_ASSESSMENT

## Grading Impact

- Spawning architect promptly: +10 points
- Providing complete context: +10 points
- Including all branches: +10 points
- Proper state file updates: +10 points
- Missing phase assessment before SUCCESS: -100 points (CRITICAL FAILURE)