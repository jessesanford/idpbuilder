# Orchestrator - PLANNING State Rules

## üö® PLANNING IS A VERB - START PLANNING IMMEDIATELY! üö®

### IMMEDIATE ACTIONS UPON ENTERING PLANNING

**THE MOMENT YOU ENTER THIS STATE, YOU MUST:**
1. Determine which level of planning is needed NOW (master/phase/wave)
2. Copy the appropriate template file NOW
3. Start filling in the plan sections immediately
4. Check TodoWrite for any pending planning tasks
5. Begin populating placeholders without delay

**FORBIDDEN - AUTOMATIC FAILURE:**
- ‚ùå "STATE TRANSITION COMPLETE: Now in PLANNING" [stops]
- ‚ùå "Successfully entered PLANNING state" [waits]
- ‚ùå "Ready to create plans" [pauses]
- ‚ùå "I'm in PLANNING state" [does nothing]

**REQUIRED - IMMEDIATE ACTION:**
- ‚úÖ "Entering PLANNING, copying master template now..."
- ‚úÖ "Planning Phase 2, loading phase template..."
- ‚úÖ "PLANNING: Creating wave structure for Phase ${PHASE}..."

## State Context
You are creating or reviewing implementation plans at various levels (master, phase, wave) - START IMMEDIATELY!

---
### üö®üö® RULE R160.0.0 - Template Usage Requirements
**Source:** rule-library/RULE-REGISTRY.md#R160
**Criticality:** MANDATORY - Required for approval

MANDATORY TEMPLATE USAGE:

When creating NEW plans:
1. MASTER PLAN:
cp templates/MASTER-IMPLEMENTATION-PLAN.md ./PLAN.md

2. PHASE PLAN:
cp templates/PHASE-IMPLEMENTATION-PLAN.md
./phase-plans/PHASE-{N}-PLAN.md

3. EFFORT PLAN (for Code Reviewer):
cp templates/EFFORT-PLANNING-TEMPLATE.md
efforts/phase{N}/wave{N}/effort{N}/IMPLEMENTATION-PLAN.md

When using EXISTING plans:
- READ the rendered version from project directory
- UPDATE placeholders with actual values
- VERIFY all sections are complete
---

## Planning Protocol

---
### ‚ÑπÔ∏è RULE R015.0.0 - Planning Protocol
**Source:** rule-library/RULE-REGISTRY.md#R015
**Criticality:** INFO - Best practice

PLANNING WORKFLOW:

Step 1: Determine Planning Level
- Is this initial project setup? ‚Üí Use MASTER template
- Is this phase planning? ‚Üí Use PHASE template
- Is this effort planning? ‚Üí Spawn Code Reviewer

Step 2: Load Appropriate Template
```bash
# For new master plan
READ: templates/MASTER-IMPLEMENTATION-PLAN.md
COPY TO: ./IMPLEMENTATION-PLAN.md

# For new phase plan
READ: templates/PHASE-IMPLEMENTATION-PLAN.md
COPY TO: phase-plans/PHASE-{N}-PLAN.md
```

Step 3: Populate Template
- Replace ALL [PLACEHOLDERS] with actual values
- Remove unused optional sections
- Add project-specific requirements

Step 4: Validate Completeness
- All phases defined with timelines
- All waves have dependency graphs
- All efforts have size estimates
- Integration strategy documented
- Risk mitigation planned
---

## Master Plan Creation

---
### ‚ÑπÔ∏è RULE R161.0.0 - Master Plan Requirements
**Source:** rule-library/RULE-REGISTRY.md#R161
**Criticality:** INFO - Best practice

MASTER PLAN MUST INCLUDE:

From templates/MASTER-IMPLEMENTATION-PLAN.md:

1. Project Overview
- Executive summary
- Success metrics
- Technology stack

2. Phase Structure (5 phases typical)
- Foundation
- Core Features
- Advanced Features
- Integration & Optimization
- Polish & Documentation

3. Resource Allocation
- Agent assignments
- Effort distribution
- Parallel execution opportunities

4. Risk Management
- High-priority risks
- Mitigation strategies
- Contingency plans

5. Integration Strategy
- Branch structure
- Integration checkpoints
- Merge protocols
---

## Phase Plan Creation

---
### üö® RULE R162.0.0 - Phase Plan Requirements
**Source:** rule-library/RULE-REGISTRY.md#R162
**Criticality:** CRITICAL - Major impact on grading

PHASE PLAN WORKFLOW:

1. Copy Phase Template:
```bash
cp templates/PHASE-IMPLEMENTATION-PLAN.md \
phase-plans/PHASE-${PHASE_NUM}-PLAN.md
```

2. Required Sections:
- Phase overview with duration
- Success criteria checklist
- Wave structure (typically 3-5 waves)
- Individual effort breakdowns
- Testing strategy by level
- Integration plan
- Risk analysis

3. Effort Details Must Include:
- E[P].[W].[E] identifier
- Size estimate (MUST be ‚â§800 lines)
- Dependencies
- Test requirements
- Deliverables list

4. Quality Gates:
- Define measurable thresholds
- Include visual status indicators
- Track progress against targets
---

## Spawning for Effort Planning

---
### ‚ÑπÔ∏è RULE R163.0.0 - Effort Planning Delegation
**Source:** rule-library/RULE-REGISTRY.md#R163
**Criticality:** INFO - Best practice

EFFORT PLANNING DELEGATION:

The Orchestrator MUST spawn Code Reviewer for:

1. Creating effort implementation plans
2. Using EFFORT-PLANNING-TEMPLATE.md
3. Creating work-log.md from WORK-LOG-TEMPLATE.md

Spawn Command:
```
Task: Create implementation plan for E[P].[W].[E]
Agent: code-reviewer

Instructions:
1. READ: phase-plans/PHASE-[N]-PLAN.md
2. COPY: templates/EFFORT-PLANNING-TEMPLATE.md
TO: efforts/phase[N]/wave[N]/effort[N]/IMPLEMENTATION-PLAN.md
3. COPY: templates/WORK-LOG-TEMPLATE.md
TO: efforts/phase[N]/wave[N]/effort[N]/work-log.md
4. Fill in all placeholders
5. Estimate size carefully
6. Plan split contingency if >700 lines
```
---

## Plan Validation

---
### ‚ÑπÔ∏è RULE R164.0.0 - Plan Completeness Validation
**Source:** rule-library/RULE-REGISTRY.md#R164
**Criticality:** INFO - Best practice

VALIDATION CHECKLIST:

Master Plan:
‚ñ° All [PLACEHOLDERS] replaced
‚ñ° 5 phases defined
‚ñ° Total effort count calculated
‚ñ° Timeline realistic
‚ñ° Risk mitigation strategies defined

Phase Plan:
‚ñ° All waves defined
‚ñ° Dependencies graphed
‚ñ° All efforts have E[P].[W].[E] IDs
‚ñ° Size estimates total < phase target
‚ñ° Test coverage targets specified

Effort Plan:
‚ñ° Size estimate provided
‚ñ° Split contingency if >700 lines
‚ñ° File list with line estimates
‚ñ° Test requirements specified
‚ñ° Review checklist included
---

## Template Location Reference

---
### ‚ÑπÔ∏è RULE R165.0.0 - Template File Locations
**Source:** rule-library/RULE-REGISTRY.md#R165
**Criticality:** INFO - Best practice

TEMPLATE LOCATIONS:

Planning Templates:
- templates/MASTER-IMPLEMENTATION-PLAN.md
- templates/PHASE-IMPLEMENTATION-PLAN.md
- templates/EFFORT-PLANNING-TEMPLATE.md
- templates/WORK-LOG-TEMPLATE.md

Usage Examples:
- templates/README.md (explains all templates)

Project Locations (after copying):
- ./IMPLEMENTATION-PLAN.md (master)
- ./phase-plans/PHASE-[N]-PLAN.md
- ./efforts/phase[N]/wave[N]/effort[N]/IMPLEMENTATION-PLAN.md
- ./efforts/phase[N]/wave[N]/effort[N]/work-log.md
---

## Planning Examples

### Example: Starting New Project
```bash
# Orchestrator in PLANNING state for new project

1. Copy master template:
   cp templates/MASTER-IMPLEMENTATION-PLAN.md ./IMPLEMENTATION-PLAN.md

2. Fill in project details:
   - Replace [PROJECT_NAME] with actual name
   - Define 5 phases with targets
   - Estimate total lines and efforts

3. Create phase plans:
   for i in {1..5}; do
     cp templates/PHASE-IMPLEMENTATION-PLAN.md phase-plans/PHASE-$i-PLAN.md
   done

4. Transition to WAVE_START when ready
```

### Example: Planning a Phase
```bash
# Orchestrator planning Phase 2

1. Load phase template:
   cp templates/PHASE-IMPLEMENTATION-PLAN.md phase-plans/PHASE-2-PLAN.md

2. Define waves (typically 3-5):
   - Wave 1: Core Business Logic
   - Wave 2: API Implementation  
   - Wave 3: Data Layer

3. Define efforts per wave:
   - E2.1.1: User Service (600 lines)
   - E2.1.2: Auth Service (500 lines)
   - E2.1.3: Session Management (400 lines)

4. Spawn Code Reviewer for each effort plan
```

## State Transitions

From PLANNING state:
- **PLAN_COMPLETE** ‚Üí WAVE_START (Begin wave execution)
- **SPAWN_REVIEWER** ‚Üí SPAWN_AGENTS (Spawn Code Reviewer for effort plans)
- **PLAN_INVALID** ‚Üí ERROR_RECOVERY (Fix plan issues)
